name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    paths:
      - 'lib/**'
      - 'src/**'
      - 'test/**'
      - 'lib/base/base.agda-lib'
      - 'agda2hs.cabal'
      - 'cabal.project'
      - 'Makefile'
      - '.github/workflows/**.yml'
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]   # macOS-latest, windows-latest
        cabal: [3.10.3]
        deploy-ghc: [9.6.6]
        ghc: [9.4.8, 9.6.6, 9.8.2, 9.10.1]
    steps:
    - uses: actions/checkout@v3
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    # Takes care of ghc and cabal. See https://github.com/haskell/actions.
    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    # Generate a cabal.project.freeze file with all dependencies. We use the
    # hash of this as the cache key, so when a dependency changes we upload a
    # new cache.
    - name: Freeze
      run: cabal freeze

    # Cache the contents of ~/.cabal/store to avoid rebuilding dependencies for
    # every build. `restore-keys` makes it use the latest cache even if the
    # fingerprint doesn't match, so we don't need to start from scratch every
    # time a dependency changes.
    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path:         ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key:          ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Run test suite
      run: make test

    - name: Generate Prelude HTML
      if: ${{ (matrix.ghc == matrix.deploy-ghc) && (github.ref == 'refs/heads/master') }}
      run: make libHtml

    - name: Deploy Prelude HTML
      if: ${{ (matrix.ghc == matrix.deploy-ghc) && (github.ref == 'refs/heads/master') }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: html
        destination_dir: lib

    - name: Generate test-suite HTML
      if: ${{ (matrix.ghc == matrix.deploy-ghc) && (github.ref == 'refs/heads/master') }}
      run: |
        sudo apt-get install -y pandoc zsh
        make testHtml

    - name: Deploy test-suite HTML
      if: ${{ (matrix.ghc == matrix.deploy-ghc) && (github.ref == 'refs/heads/master') }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: test/html
        destination_dir: test

